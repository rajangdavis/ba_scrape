# Special bash command
alias pg='PGPASSWORD=$PG_PASS psql -U postgres'
alias sequelize='./node_modules/.bin/sequelize'
alias db_reset='sequelize db:drop && sequelize db:create && sequelize db:migrate && sequelize db:seed:all'




# Installing PostGIS
pg -d craft_beer_development -c "CREATE EXTENSION postgis;"
pg -d yourdatabase -c "CREATE EXTENSION fuzzystrmatch"
pg -d yourdatabase -c "CREATE EXTENSION postgis_tiger_geocoder;"





# Create database
sequelize db:create

# Migrate database
sequelize db:migrate

# Seed database (all of the seeds)
sequelize db:seed:all





# Drop database
sequelize db:drop

# Generating models

	# Kind of dumb, but the attributes cannot have spaces between the commas
	sequelize model:generate --name Brewery --attributes name:string,address:string,city:string,state:string,website:string,latitude:float,longitude:float,ba_link:string
	sequelize model:generate --name Style --attributes abvRange:string,ibuRange:string,glassware:string,description:text
	sequelize model:generate --name Beer --attributes name:string,abv:float,ratings_count:integer,total_score:float

	sequelize seed:generate --name brewery-up
	sequelize seed:generate --name beer-up
	sequelize seed:generate --name style-up



// Associations
https://medium.com/@andrewoons/how-to-define-sequelize-associations-using-migrations-de4333bf75a7

	// Brewery.hasMany(Beer, {as: 'Beers'})
	
	// Beer.belongsTo(Brewery)
	// Beer.hasOne(Style, {as: "Style"})

	// Style.hasMany(Beer, {as: "Beers"})





// Stretch goals
sequelize model:generate --name Rating --attributes # scores for ratings attributes, text if present
	// Rating.belongsTo(Beer)
	// Rating.hasOne(Brewery, {through:Beer})
	// Brewery.hasMany(Ratings, {as: 'BeerRatings', through:Beer})
	// Beer.hasMany(Rating, {as: "Ratings"})